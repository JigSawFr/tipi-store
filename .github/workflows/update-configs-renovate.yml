name: Update & Validate Metadata & Configs of Upgraded Apps

on:
  push:
    branches: [main, master]
  pull_request:
    types: [opened, reopened, synchronize]
    branches: [main, master]
  workflow_dispatch:

jobs:
  # Debug job to log workflow context for troubleshooting
  debug-context:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - name: Debug workflow context
        run: |
          echo "üîç Debugging workflow execution context"
          echo "Event name: ${{ github.event_name }}"
          echo "Event action: ${{ github.event.action }}"
          echo "Actor: ${{ github.actor }}"
          echo "Sender login: ${{ github.event.sender.login }}"
          echo "Repository: ${{ github.repository }}"
          echo "PR number: ${{ github.event.pull_request.number }}"
          echo "PR title: ${{ github.event.pull_request.title }}"
          echo "PR author: ${{ github.event.pull_request.user.login }}"
          echo "Base ref: ${{ github.base_ref }}"
          echo "Head ref: ${{ github.head_ref }}"
          echo "Is Renovate bot: ${{ github.actor == 'renovate[bot]' }}"
  # Job for Renovate PRs - handles automatic updates and merging
  update-and-validate-configs-renovate:
    runs-on: ubuntu-latest
    if: >
      github.event_name == 'pull_request' && 
      github.actor == 'renovate[bot]' &&
      github.event.sender.login == 'renovate[bot]' &&
      (
        github.event.action == 'opened' ||
        github.event.action == 'reopened'
      ) &&
      (
        contains(github.event.pull_request.title, 'chore(deps)')
      )
    needs: debug-context
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ssh-key: ${{ secrets.DEPLOY_KEY }}

      - name: Check if last commit is from our workflow
        id: check_workflow_commit
        run: |
          echo "üîç Checking if last commit was made by this workflow..."
          LAST_COMMIT_MESSAGE=$(git log -1 --pretty=format:'%s')
          LAST_COMMIT_AUTHOR=$(git log -1 --pretty=format:'%an')
          echo "Last commit message: $LAST_COMMIT_MESSAGE"
          echo "Last commit author: $LAST_COMMIT_AUTHOR"
          
          if [[ "$LAST_COMMIT_MESSAGE" == *"üîß Fixed: increment tipi_version for Docker image updates"* ]] && [[ "$LAST_COMMIT_AUTHOR" == "github-actions[bot]" ]]; then
            echo "üõë Last commit was made by this workflow, stopping execution to prevent infinite loop"
            echo "skip_execution=true" >> $GITHUB_OUTPUT
          else
            echo "‚úÖ Last commit was not made by this workflow, proceeding"
            echo "skip_execution=false" >> $GITHUB_OUTPUT
          fi

      - name: Stop execution if workflow loop detected
        if: steps.check_workflow_commit.outputs.skip_execution == 'true'
        run: |
          echo "üîÑ Workflow execution stopped to prevent infinite loop"
          echo "‚ÑπÔ∏è  Last commit was generated by this workflow"
          exit 0

      - name: Get list of apps changed in the PR
        id: changed_apps
        if: steps.check_workflow_commit.outputs.skip_execution == 'false'
        uses: tj-actions/changed-files@v46
        with:
          files: apps/*/docker-compose.json

      - name: Backup previous config.json tipi_version
        if: steps.check_workflow_commit.outputs.skip_execution == 'false' && steps.changed_apps.outputs.any_changed == 'true'
        shell: pwsh
        env:
          CHANGED_FILES: ${{ steps.changed_apps.outputs.all_changed_files }}
        run: |
          pwsh ./.github/scripts/backup-config.ps1

      - name: Update config.json only for changed apps (PR Renovate)
        if: steps.check_workflow_commit.outputs.skip_execution == 'false' && steps.changed_apps.outputs.any_changed == 'true'
        shell: pwsh
        env:
          CHANGED_FILES: ${{ steps.changed_apps.outputs.all_changed_files }}
        run: |
          pwsh ./.github/scripts/update-config.ps1

      - name: Check config.json update consistency
        if: steps.check_workflow_commit.outputs.skip_execution == 'false' && steps.changed_apps.outputs.any_changed == 'true'
        shell: pwsh
        env:
          CHANGED_FILES: ${{ steps.changed_apps.outputs.all_changed_files }}
        run: |
          pwsh ./.github/scripts/validate-config.ps1

      - name: Commit and push config.json updates with verified signature
        if: steps.check_workflow_commit.outputs.skip_execution == 'false' && steps.changed_apps.outputs.any_changed == 'true'
        uses: iarekylew00t/verified-bot-commit@v1
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          message: "üîß Fixed: increment tipi_version for Docker image updates"
          files: |
            apps/*/config.json
          update-local: false

      - name: Trigger validation workflows after bot commit
        if: steps.check_workflow_commit.outputs.skip_execution == 'false' && steps.changed_apps.outputs.any_changed == 'true'
        run: |
          echo "üîÑ Triggering validation workflows manually..."
          gh workflow run validate-configs.yml --ref ${{ github.event.pull_request.head.ref }}
          gh workflow run test.yml --ref ${{ github.event.pull_request.head.ref }}
          gh workflow run lint.yml --ref ${{ github.event.pull_request.head.ref }}
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check if update is major version
        if: steps.check_workflow_commit.outputs.skip_execution == 'false' && steps.changed_apps.outputs.any_changed == 'true'
        id: check_major
        shell: pwsh
        env:
          PR_BODY: ${{ github.event.pull_request.body }}
        run: |
          pwsh ./.github/scripts/check-major-version.ps1 -PrBody $env:PR_BODY

      - name: Add approved-to-merge label to PR
        if: steps.check_workflow_commit.outputs.skip_execution == 'false' && steps.changed_apps.outputs.any_changed == 'true' && steps.check_major.outputs.is_major == 'false' && success()
        run: |
          gh pr edit ${{ github.event.pull_request.number }} --add-label "approved-to-merge"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable automerge for approved PR
        if: steps.check_workflow_commit.outputs.skip_execution == 'false' && steps.changed_apps.outputs.any_changed == 'true' && steps.check_major.outputs.is_major == 'false' && success()
        run: |
          if ! gh pr merge --squash --auto ${{ github.event.pull_request.number }}; then
            echo "‚ö†Ô∏è Auto-merge failed - likely due to branch protection rules not configured for auto-merge"
            echo "‚úÖ PR is approved and ready for manual merge"
            exit 0
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Skip automerge for major updates
        if: steps.check_workflow_commit.outputs.skip_execution == 'false' && steps.changed_apps.outputs.any_changed == 'true' && steps.check_major.outputs.is_major == 'true'
        run: |
          echo "üö´ Major version update detected - manual review required"
          echo "::warning::This PR contains a major version update and requires manual review before merging"
          gh pr edit ${{ github.event.pull_request.number }} --add-label "major-update" --add-label "needs-review"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Job for manual contributions - validates configurations only
  validate-manual-changes:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && !(github.actor == 'renovate[bot]' || contains(github.event.pull_request.user.login, 'renovate'))
    needs: debug-context
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Get list of apps changed in the PR
        id: changed_apps
        uses: tj-actions/changed-files@v46
        with:
          files: |
            apps/*/docker-compose.json
            apps/*/config.json
            apps/*/metadata/**

      - name: Validate JSON syntax
        if: steps.changed_apps.outputs.any_changed == 'true'
        shell: pwsh
        env:
          CHANGED_FILES: ${{ steps.changed_apps.outputs.all_changed_files }}
        run: |
          pwsh ./.github/scripts/validate-json-syntax.ps1

      - name: Validate config.json structure
        if: steps.changed_apps.outputs.any_changed == 'true'
        shell: pwsh
        env:
          CHANGED_FILES: ${{ steps.changed_apps.outputs.all_changed_files }}
        run: |
          pwsh ./.github/scripts/validate-config-structure.ps1

      - name: Test Docker Compose validity
        if: steps.changed_apps.outputs.any_changed == 'true'
        shell: bash
        env:
          CHANGED_FILES: ${{ steps.changed_apps.outputs.all_changed_files }}
        run: |
          bash ./.github/scripts/validate-docker-compose.sh

      - name: Validation Summary
        if: always()
        run: |
          echo "üìã Configuration validation completed for PR #${{ github.event.pull_request.number }}"
          echo "üîç Changed files: ${{ steps.changed_apps.outputs.all_changed_files }}"
          echo "‚ÑπÔ∏è  This PR requires manual review as it's not from Renovate Bot"
